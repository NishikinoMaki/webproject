<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>nagaseiori</groupId>
	<artifactId>webproject</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>nagaseiori Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<!-- jar版本统一管理，解决版本冲 -->
	<properties>
		<java_source_version>1.8</java_source_version>
		<java_target_version>1.8</java_target_version>
		<file.encoding>UTF-8</file.encoding>
		<servlet.version>3.1.0</servlet.version>
		<spring.version>4.0.7.RELEASE</spring.version>
		<junit.version>4.11</junit.version>
		<jackson.version>1.9.13</jackson.version>
		<spring.redis.version>1.4.1.RELEASE</spring.redis.version>
		<redis.version>2.5.2</redis.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	

	<!--dependencyManagement 动态jar包管理，父模块定义，子模块使用是添加引用即可 -->
	<!-- <dependencyManagement><dependencies></dependencies></dependencyManagement> -->
	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>${spring.redis.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>7.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>1.2_04</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<!--maven的tomcat插件本身不提供jstl包所以将依赖范围由provided改为 compile -->
			<scope>compile</scope>
		</dependency>
<!-- 		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency> -->

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.3</version>
		</dependency>
		
 		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-spring</artifactId>
			<version>0.1.1</version>
		</dependency>
		
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${redis.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp-spring</artifactId>
			<version>0.8.0.RELEASE</version>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.4.4</version>
		</dependency>
		
		
	</dependencies>

	<build>
		<!-- 指定maven 编译的JDK版本和编码格式 -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${file.encoding}</encoding>
				</configuration>
			</plugin>
			
			<!-- 将依赖的jar包导入到指定目录去 -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<outputDirectory>src/main/webapp/WEB-INF/lib</outputDirectory>
					<excludeTransitive>false</excludeTransitive>
					<stripVersion>false</stripVersion><!-- 去除版本号 -->
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<encoding>${file.encoding}</encoding>
				</configuration>
			</plugin>
			
		</plugins>
		
		<!-- 将编译文件指定到指定路径 -->
		<sourceDirectory>src/main/java</sourceDirectory>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
		
		
		<!-- <pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>    这里也可以使用tomcat7-maven-plugin
					<version>2.2</version>   最新版本
					<configuration>
						<path>/webproject</path>
						<url>http://localhost:8080/manager/text</url>    配置远程tomcat的路劲
						<username>admin</username>
						<password>admin</password>
						<uriEncoding>${file.encoding}</uriEncoding>   tomcat的url编码 达到和修改server.xml文件一样的功能
						<server>tomcat7</server>
					</configuration>
				</plugin>


				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.0,)</versionRange>
										<goals>
											<goal>copy-dependencies</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement> -->
	</build>

	<!-- 私服链接 -->
	<repositories>
		<repository>
			<id>nexus</id>
			<name>my-nexus-repository</name>
			<url>http://192.168.18.14:8080/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>my-nexus-repository</name>
			<url>http://192.168.18.14:8080/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<!-- 私服部署 -->
	<distributionManagement>
		<site>
			<id>website</id>
			<url>scp://webhost.company.com/www/website</url>
		</site>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://192.168.18.14:8080/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<name>Internal Snapshots</name>
			<url>http://192.168.18.14:8080/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>